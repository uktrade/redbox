[
    {
        "question_id": 90,
        "db_id": "financial",
        "question": "How many accounts who have region in Prague are eligible for loans?",
        "evidence": "A3 contains the data of region",
        "SQL": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T1.district_id = T3.district_id WHERE T3.A3 = 'Prague'",
        "answer": 84,
        "difficulty": "simple",
        "SQL_redbox_without_evidence": "SELECT COUNT(DISTINCT a.account_id) as eligible_accounts FROM account_table_1 a JOIN district_table_5 d ON a.district_id = d.district_id LEFT JOIN loan_table_6 l ON a.account_id = l.account_id WHERE d.A3 = 'Prague' AND (l.status = 'A' OR l.loan_id IS NULL)",
        "SQL_redbox_with_evidence": "SELECT COUNT(DISTINCT a.account_id) AS prague_accounts FROM account_table_1 a JOIN district_table_5 d ON a.district_id = d.district_id WHERE d.A3 = 'Prague'",
        "redbox_answer_without_evidence": 504,
        "redbox_answer_with_evidence": 554,
        "is_accurate_without_evidence": 0,
        "is_accurate_with_evidence": 0
    },
    {
        "question_id": 91,
        "db_id": "financial",
        "question": "The average unemployment ratio of 1995 and 1996, which one has higher percentage?",
        "evidence": "A12 refers to unemploymant rate 1995; A13 refers to unemploymant rate 1996",
        "SQL": "SELECT DISTINCT IIF(AVG(A13) > AVG(A12), '1996', '1995') FROM district",
        "answer": 1996,
        "difficulty": "simple",
        "SQL_redbox_without_evidence": "None",
        "SQL_redbox_with_evidence": "SELECT AVG(A12) as avg_unemployment_1995, AVG(A13) as avg_unemployment_1996 FROM district_table_5",
        "redbox_answer_without_evidence": "I don't have sufficient data in the database to determine whether 1995 or 1996 had a higher average unemployment ratio. The database tables don't contain time-series unemployment data that would allow for this comparison.",
        "redbox_answer_with_evidence": 1996,
        "is_accurate_without_evidence": 0,
        "is_accurate_with_evidence": 1
    },
    {
        "question_id": 92,
        "db_id": "financial",
        "question": "List out the no. of districts that have female average salary is more than 6000 but less than 10000?",
        "evidence": "A11 refers to average salary; Female mapps to gender = 'F'",
        "SQL": "SELECT COUNT(DISTINCT T2.district_id)  FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' AND T2.A11 BETWEEN 6000 AND 10000",
        "answer": 69,
        "difficulty": "simple",
        "SQL_redbox_without_evidence": "SELECT COUNT(*) FROM district_table_5 WHERE A11 > 6000 AND A11 < 10000",
        "SQL_redbox_with_evidence": "SELECT COUNT(*) AS number_of_districts FROM district_table_5 WHERE A11 > 6000 AND A11 < 10000",
        "redbox_answer_without_evidence": "result is 69 (SQL is incorrect at it does not select female gender). Note: Since the database uses coded column names rather than descriptive labels, my identification of A11 as the female average salary column is based on analyzing the numeric ranges in the data, which appear consistent with typical salary values.",
        "redbox_answer_with_evidence": "result is 69 (SQL is incorrect at it does not select female gender). Important note: While the question specifically asked about female average salary the database structure doesn't actually separate salary data by gender. The A11 column represents the overall average salary for each district without gender distinction.",
        "is_accurate_without_evidence": 0,
        "is_accurate_with_evidence": 0
    },
    {
        "question_id": 96,
        "db_id": "financial",
        "question": "How many customers who choose statement of weekly issuance are Owner?",
        "evidence": "'POPLATEK TYDNE' stands for weekly issuance",
        "SQL": "SELECT COUNT(T1.account_id) FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T2.type = 'OWNER' AND T1.frequency = 'POPLATEK TYDNE'",
        "answer": 240,
        "difficulty": "simple",
        "SQL_redbox_without_evidence": "SELECT COUNT(*) AS owner_count FROM account_table_1 a JOIN disp_table_4 d ON a.account_id = d.account_id WHERE d.type = 'OWNER' AND a.frequency = 'POPLATEK TYDNE'",
        "SQL_redbox_with_evidence": "SELECT COUNT(DISTINCT d.client_id) FROM disp_table_4 d JOIN account_table_1 a ON d.account_id = a.account_id WHERE a.frequency = 'POPLATEK TYDNE' AND d.type = 'OWNER'",
        "redbox_answer_without_evidence": "result is 240. From examining the distinct values in the frequency column, POPLATEK TYDNE (appears to be weekly statements)",
        "redbox_answer_with_evidence": 240,
        "is_accurate_without_evidence": 1,
        "is_accurate_with_evidence": 1
    },
    {
        "question_id": 97,
        "db_id": "financial",
        "question": "List out the id number of client who choose statement of issuance after transaction are Disponent?",
        "evidence": "'POPLATEK PO OBRATU' stands for issuance after transaction",
        "SQL": "SELECT T2.client_id FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id WHERE T1.frequency = 'POPLATEK PO OBRATU' AND T2.type = 'DISPONENT'",
        "answer":"159, 384, 1261, 1706, 2304, 3526, 3609, 4035, 4133, 4334, 4625, 5580, 6318, and 11979.",
        "difficulty": "simple",
        "SQL_redbox_without_evidence": "None",
        "SQL_redbox_with_evidence": "SELECT DISTINCT d.client_id FROM disp_table_4 d JOIN account_table_1 a ON d.account_id = a.account_id WHERE d.type = 'DISPONENT' AND a.frequency = 'POPLATEK PO OBRATU'",
        "redbox_answer_without_evidence":"I don't have enough information in the database to identify clients who chose statement of issuance after transactions as Disponent. While I can see which clients are Disponents (in disptable4), there's no data field that indicates preferences for statement issuance after transactions. ",
        "redbox_answer_with_evidence": "159, 384, 1261, 1706, 2304, 3526, 3609, 4035, 4133, 4334, 4625, 5580, 6318, and 11979.",
        "is_accurate_without_evidence": 0,
        "is_accurate_with_evidence": 1
    },

    {
        "question_id": 103,
        "db_id": "financial",
        "question": "Which client issued his/her card in 1994/3/3, give his/her client id.",
        "evidence": "",
        "SQL": "SELECT T2.client_id FROM client AS T1 INNER JOIN disp AS T2 ON T1.client_id = T2.client_id INNER JOIN card AS T3 ON T2.disp_id = T3.disp_id WHERE T3.issued = '1994-03-03'",
        "answer": 2429,
        "difficulty": "simple",
        "SQL_redbox_without_evidence": "None",
        "redbox_answer_without_evidence": "Based on the available data, there appears to be no client who issued a card on March 3, 1994 (1994/3/3).",
        "is_accurate_without_evidence": 0
    },
    {
        "question_id": 105,
        "db_id": "financial",
        "question": "There was a loan approved in 1994/8/25, where was that account opened, give the district Id of the branch.",
        "evidence": "",
        "SQL": "SELECT T1.district_id FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.date = '1994-08-25'",
        "answer": 31,
        "difficulty": "simple",
        "SQL_redbox_without_evidence": "SELECT a.district_id FROM loan_table_6 l JOIN account_table_1 a ON l.account_id = a.account_id WHERE l.date = '1994-08-25'",
        "redbox_answer_without_evidence": 31,
        "is_accurate_without_evidence": 1
    },
      {
    "question_id": 190,
    "db_id": "financial",
    "question": "How many clients who were born in 1920 stay in east Bohemia?",
    "evidence": "East Bohemia appears in the column A3, which refers to the region.",
    "SQL": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE STRFTIME('%Y', T1.birth_date) = '1920' AND T2.A3 = 'east Bohemia'",
    "answer": 6, 
    "difficulty": "simple",
    "SQL_redbox_without_evidence": "SELECT COUNT(*) FROM client_table_3 c JOIN district_table_5 d ON c.district_id = d.district_id WHERE c.birth_date LIKE '1920%' AND d.A3 = 'east Bohemia';",
    "SQL_redbox_with_evidence": "SELECT COUNT(*) as count FROM client_table_3 c JOIN district_table_5 d ON c.district_id = d.district_id WHERE c.birth_date LIKE '1920%'  AND d.A3 = 'east Bohemia'",
    "redbox_answer_without_evidence":"6. I confirmed that east Bohemia is one of the regions stored in the A3 column of districttable5",
    "redbox_answer_with_evidence": 6,
    "is_accurate_without_evidence": 1,
    "is_accurate_with_evidence": 1
    
  },
  {
    "question_id": 191,
    "db_id": "financial",
    "question": "How many loan accounts are for pre-payment of duration of 24 months with weekly issuance of statement.",
    "evidence": "Frequency = 'POPLATEK TYDNE' referes to weekly statement",
    "SQL": "SELECT COUNT(T2.account_id) FROM account AS T1 INNER JOIN loan AS T2 ON T1.account_id = T2.account_id WHERE T2.duration = 24 AND T1.frequency = 'POPLATEK TYDNE'",
    "answer": 15, 
    "difficulty": "simple",
    "SQL_redbox_without_evidence": "SELECT COUNT(*) FROM loan_table_6 l JOIN account_table_1 a ON l.account_id = a.account_id WHERE l.duration = 24 AND a.frequency = 'POPLATEK TYDNE';",
    "SQL_redbox_with_evidence": "SELECT COUNT(*) AS count_of_loans FROM loan_table_6 l JOIN account_table_1 a ON l.account_id = a.account_id WHERE l.duration = 24 AND a.frequency = 'POPLATEK TYDNE'",
    "redbox_answer_without_evidence": 15,
    "redbox_answer_with_evidence": 15,
    "is_accurate_without_evidence": 1,
    "is_accurate_with_evidence": 1
  },
    {
    "question_id": 187,
    "db_id": "financial",
    "question": "How many clients who choose statement of weekly issuance are Owner?",
    "evidence": "Frequency = 'POPLATEK TYDNE' refers to weekly issuance",
    "SQL": "SELECT COUNT(T2.account_id) FROM account AS T1 INNER JOIN disp AS T2 ON T2.account_id = T1.account_id WHERE T1.frequency = 'POPLATEK TYDNE' AND T2.type = 'OWNER'",
    "answer": 240, 
    "difficulty": "simple",
    "SQL_redbox_without_evidence": "SELECT COUNT(DISTINCT d.client_id) as owner_count FROM disp_table_4 d JOIN account_table_1 a ON d.account_id = a.account_id WHERE d.type = 'OWNER' AND a.frequency = 'POPLATEK TYDNE'",
    "SQL_redbox_with_evidence": "SELECT COUNT(DISTINCT d.client_id) AS owner_count_with_weekly_statements FROM disp_table_4 d JOIN account_table_1 a ON d.account_id = a.account_id WHERE d.type = 'OWNER' AND a.frequency = 'POPLATEK TYDNE'",
    "redbox_answer_without_evidence": 240,
    "redbox_answer_with_evidence": 240,
    "is_accurate_without_evidence": 1,
    "is_accurate_with_evidence": 1
  },
    {
        "question_id": 89,
        "db_id": "financial",
        "question": "How many accounts who choose issuance after transaction are staying in East Bohemia region?",
        "evidence": "A3 contains the data of region; 'POPLATEK PO OBRATU' represents for 'issuance after transaction'.",
        "SQL": "SELECT COUNT(T2.account_id) FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id WHERE T1.A3 = 'east Bohemia' AND T2.frequency = 'POPLATEK PO OBRATU'",
        "answer": 13, 
        "difficulty": "moderate",
        "SQL_redbox_without_evidence": "SELECT COUNT(DISTINCT a.account_id) FROM account_table_1 a JOIN order_table_7 o ON a.account_id = o.account_id JOIN district_table_5 d ON a.district_id = d.district_id WHERE o.k_symbol = 'UVER' AND d.A3 = 'east Bohemia'",
        "SQL_redbox_with_evidence": "SELECT COUNT(*) AS count FROM account_table_1 a JOIN district_table_5 d ON a.district_id = d.district_id WHERE a.frequency = 'POPLATEK PO OBRATU' AND d.A3 = 'east Bohemia'",
        "redbox_answer_without_evidence": 89,
        "redbox_answer_with_evidence": 13,
        "is_accurate_without_evidence": 0,
        "is_accurate_with_evidence": 1
    },
    {
        "question_id": 93,
        "db_id": "financial",
        "question": "How many male customers who are living in North Bohemia have average salary greater than 8000?",
        "evidence": "Male means that gender = 'M'; A3 refers to region; A11 pertains to average salary.",
        "SQL": "SELECT COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'M' AND T2.A3 = 'north Bohemia' AND T2.A11 > 8000",
        "answer": 280,
        "difficulty": "moderate",
        "SQL_redbox_without_evidence": "SELECT COUNT(*) FROM client_table_3 c JOIN district_table_5 d ON c.district_id = d.district_id WHERE c.gender = 'M' AND d.A3 = 'north Bohemia' AND d.A11 > 8000",
        "SQL_redbox_with_evidence": "SELECT COUNT(*) AS male_count FROM client_table_3 c JOIN district_table_5 d ON c.district_id = d.district_id WHERE c.gender = 'M' AND d.A3 = 'north Bohemia' AND d.A11 > 8000",
        "redbox_answer_without_evidence": 280,
        "redbox_answer_with_evidence": 280,
        "is_accurate_without_evidence": 1,
        "is_accurate_with_evidence": 1
    },
    {
        "question_id": 95,
        "db_id": "financial",
        "question": "List out the account numbers of clients who are youngest and have highest average salary?",
        "evidence": "If the person A's birthdate < B's birthdate, it means that person B is younger than person A; A11 refers to average salary",
        "SQL": "SELECT T1.account_id  FROM account AS T1 INNER JOIN disp AS T2 ON T1.account_id = T2.account_id INNER JOIN client AS T3 ON T2.client_id = T3.client_id INNER JOIN district AS T4 on T4.district_id = T1.district_id WHERE T2.client_id = ( SELECT client_id FROM client ORDER BY birth_date DESC LIMIT 1) GROUP BY T4.A11, T1.account_id",
        "answer": 2836,
        "difficulty": "moderate",
        "SQL_redbox_without_evidence": "None",
        "SQL_redbox_with_evidence": "WITH client_accounts AS (SELECT c.client_id, c.birth_date, c.district_id, d.account_id,dt.A11 as avg_salary FROM client_table_3 c JOIN disp_table_4 d ON c.client_id = d.client_id JOIN district_table_5 dt ON c.district_id = dt.district_id WHERE d.type = 'OWNER') SELECT account_id FROM client_accounts WHERE birth_date = (SELECT MAX(birth_date) FROM client_accounts) AND avg_salary = (SELECT MAX(avg_salary) FROM client_accounts) LIMIT 10;",
        "redbox_answer_without_evidence": "Agent stopped due to iteration limit or time limit. 3 attempts.",
        "redbox_answer_with_evidence": 1372 ,
        "is_accurate_without_evidence": 0,
        "is_accurate_with_evidence": 0
    },
    {
        "question_id": 98,
        "db_id": "financial",
        "question": "Among the accounts who have approved loan date in 1997, list out the accounts that have the lowest approved amount and choose weekly issuance statement.",
        "evidence": "'POPLATEK TYDNE' stands for weekly issuance",
        "SQL": "SELECT T2.account_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE STRFTIME('%Y', T1.date) = '1997' AND T2.frequency = 'POPLATEK TYDNE' ORDER BY T1.amount LIMIT 1",
        "answer": 176,
        "difficulty": "moderate",
        "SQL_redbox_without_evidence": "None",
        "SQL_redbox_with_evidence": "SELECT a.account_id, a.frequency, l.date as loan_date, l.amount FROM account_table_1 a JOIN loan_table_6 l ON a.account_id = l.account_id WHERE strftime('%Y', l.date) = '1997' AND a.frequency = 'POPLATEK TYDNE' AND l.amount = (SELECT MIN(l2.amount) FROM loan_table_6 l2 JOIN account_table_1 a2 ON l2.account_id = a2.account_id WHERE strftime('%Y', l2.date) = '1997' AND a2.frequency = 'POPLATEK TYDNE') LIMIT 10",
        "redbox_answer_without_evidence": "Agent stopped due to iteration limit or time limit. 3 attempts.",
        "redbox_answer_with_evidence": 176,
        "is_accurate_without_evidence": 0,
        "is_accurate_with_evidence": 1
    },
    {
        "question_id": 99,
        "db_id": "financial",
        "question": "Among the accounts who have loan validity more than 12 months, list out the accounts that have the highest approved amount and have account opening date in 1993.",
        "evidence": "Loan validity more than 12 months refers to duration > 12",
        "SQL": "SELECT T1.account_id FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id WHERE STRFTIME('%Y', T2.date) = '1993' AND T1.duration > 12 ORDER BY T1.amount DESC LIMIT 1",
        "answer": 10451,
        "difficulty": "moderate",
        "SQL_redbox_without_evidence": "SELECT a.account_id, a.date as account_opening_date, l.amount as loan_amount, l.duration as loan_duration FROM account_table_1 a JOIN loan_table_6 l ON a.account_id = l.account_id WHERE l.duration > 12 AND a.date LIKE '1993%' ORDER BY l.amount DESC LIMIT 10",
        "SQL_redbox_with_evidence": "SELECT a.account_id, a.date AS account_opening_date, l.amount AS loan_amount, l.duration AS loan_duration_months FROM account_table_1 a JOIN loan_table_6 l ON a.account_id = l.account_id WHERE l.duration > 12 AND a.date LIKE '1993%' ORDER BY l.amount DESC LIMIT 10",
        "redbox_answer_without_evidence":10451,
        "redbox_answer_with_evidence": 10451,
        "is_accurate_without_evidence": 1,
        "is_accurate_with_evidence": 1
    },
    {
        "question_id": 100,
        "db_id": "financial",
        "question": "Among the account opened, how many female customers who were born before 1950 and stayed in Sokolov?",
        "evidence": "Customers refer to clients; Female refers to gender = 'F'; Names of districts appear in column A2",
        "SQL": "SELECT COUNT(T2.client_id) FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id WHERE T2.gender = 'F' AND STRFTIME('%Y', T2.birth_date) < '1950' AND T1.A2 = 'Sokolov'",
        "answer":8,
        "difficulty": "moderate",
        "SQL_redbox_without_evidence": "SELECT COUNT(*) FROM client_table_3 c JOIN disp_table_4 d ON c.client_id = d.client_id JOIN account_table_1 a ON d.account_id = a.account_id WHERE c.gender = 'F' AND SUBSTR(c.birth_date, 1, 4) < '1950' AND a.district_id = 30;",
        "SQL_redbox_with_evidence": "SELECT COUNT(DISTINCT c.client_id) AS female_customers_count FROM client_table_3 c JOIN district_table_5 d ON c.district_id = d.district_id JOIN disp_table_4 disp ON c.client_id = disp.client_id JOIN account_table_1 a ON disp.account_id = a.account_id WHERE c.gender = 'F' AND c.birth_date < '1950-01-01' AND d.A2 = 'Sokolov'",
        "redbox_answer_without_evidence": 8,
        "redbox_answer_with_evidence": 8,
        "is_accurate_without_evidence": 1,
        "is_accurate_with_evidence": 1
    },
    {
        "question_id": 117,
        "db_id": "financial",
        "question": "What is the percentage of loan amount that has been fully paid with no issue.",
        "evidence": "Loan paid with no issue means contract finished, no problems; status = 'A' means contract finished, no problems; Percentage of accounts by condition = [(total(amount) & condition) / (total amount)] * 100%",
        "SQL": "SELECT (CAST(SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) AS REAL) * 100) / SUM(amount) FROM loan",
        "answer":18.02,
        "difficulty": "moderate",
        "SQL_redbox_without_evidence": "None",
        "SQL_redbox_with_evidence": "SELECT SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) AS paid_no_issue_amount, SUM(amount) AS total_amount, (SUM(CASE WHEN status = 'A' THEN amount ELSE 0 END) * 100.0 / SUM(amount)) AS percentage_paid_no_issue FROM loan_table_6;",
        "redbox_answer_without_evidence": "Agent stopped due to iteration limit or time limit. 3 attempts",
        "redbox_answer_with_evidence": 18.02,
        "is_accurate_without_evidence": 0,
        "is_accurate_with_evidence": 1
    },
    {
        "question_id": 118,
        "db_id": "financial",
        "question": "For loan amount less than USD100,000, what is the percentage of accounts that is still running with no issue.",
        "evidence": "Status = 'C' stands for running contract, ok so far; Percentage of accounts by condition = [(total(amount) & condition) / (total amount)] * 100.",
        "SQL": "SELECT CAST(SUM(status = 'C') AS REAL) * 100 / COUNT(account_id) FROM loan WHERE amount < 100000",
        "answer": 46.89,
        "difficulty": "moderate",
        "SQL_redbox_without_evidence": "SELECT COUNT(*) AS total_loans_under_100k, SUM(CASE WHEN status = 'A' THEN 1 ELSE 0 END) AS running_no_issue_loans FROM loan_table_6 WHERE amount < 100000",
        "SQL_redbox_with_evidence": "SELECT (SUM(CASE WHEN amount < 100000 AND status = 'C' THEN 1 ELSE 0 END) * 100.0) / (SUM(CASE WHEN amount < 100000 THEN 1 ELSE 0 END)) AS percentage_running_ok FROM loan_table_6",
        "redbox_answer_without_evidence": "Interpretation: The query returned (305, 139), which means: Total number of loans under $100,000: 305. Number of loans under $100,000 with status 'A' (running with no issue): 139. Percentage calculation: (139 ÷ 305) x 100 = 45.57%",
        "redbox_answer_with_evidence": 46.89,
        "is_accurate_without_evidence": 0,
        "is_accurate_with_evidence": 1
    },
    {
        "question_id": 119,
        "db_id": "financial",
        "question": "For accounts in 1993 with statement issued after transaction, list the account ID, district name and district region.",
        "evidence": "Records about district names could be found in A2; A3 contains the information about regions. 'POPLATEK PO OBRATU' stands for issuance after transaction",
        "SQL": "SELECT T1.account_id, T2.A2, T2.A3 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.frequency = 'POPLATEK PO OBRATU' AND STRFTIME('%Y', T1.date)= '1993'",
        "answer":"[(66, 'Rychnov nad Kneznou', 'east Bohemia'), (273, 'Karlovy Vary', 'west Bohemia'), (485, 'Kutna Hora', 'central Bohemia'), (539, 'Rakovnik', 'central Bohemia'), (1050, 'Hodonin', 'south Moravia'), (1286, 'Zdar nad Sazavou', 'south Moravia'), (1527, 'Tachov', 'west Bohemia'),(1539, 'Hl.m. Praha', 'Prague'), (1965, 'Hodonin', 'south Moravia'), (2137, 'Kladno', 'central Bohemia'), (2464, 'Decin', 'north Bohemia'), (2705, 'Vyskov', 'south Moravia'), (3837, 'Rychnov nad Kneznou', 'east Bohemia'), (4013, 'Opava', 'north Moravia'), (5228, 'Vsetin', 'north Moravia'), (5256, 'Olomouc', 'north Moravia'), (7123, 'Zlin', 'south Moravia'), (7774, 'Ostrava - mesto', 'north Moravia'), (8073, 'Karlovy Vary', 'west Bohemia'), (8212, 'Usti nad Orlici', 'east Bohemia'),(10227, 'Uherske Hradiste', 'south Moravia')]",
        "difficulty": "moderate",
        "SQL_redbox_without_evidence": "SELECT a.account_id, d.A2 as district_name, d.A3 as district_region FROM account_table_1 a JOIN district_table_5 d ON a.district_id = d.district_id JOIN disp_table_4 disp ON a.account_id = disp.account_id JOIN card_table_2 c ON disp.disp_id = c.disp_id WHERE SUBSTR(a.date, 1, 4) = '1993' AND c.issued > a.date LIMIT 10;",
        "SQL_redbox_with_evidence": "SELECT a.account_id, d.A2 as district_name, d.A3 as district_region FROM account_table_1 a JOIN district_table_5 d ON a.district_id = d.district_id WHERE a.date LIKE '1993%' AND a.frequency = 'POPLATEK PO OBRATU' LIMIT 10;",
        "redbox_answer_without_evidence": "Account #33 from Domazlice in west Bohemia. Account #34 from Bruntal in north Moravia. Account #66 from Rychnov nad Kneznou in east Bohemia. Account #73 from Olomouc in north Moravia. Account #96 from Frydek - Mistek in north Moravia. Account #115 from Frydek - Mistek in north Moravia. Account #128 from Benesov in central Bohemia. Account #172 from Rakovnik in central Bohemia. Account #180 from Brno - venkov in south Moravia. Account #196 from Kladno in central Bohemia.",
        "redbox_answer_with_evidence": "approach is correct but answer is incomplete due to LIMIT in sql query. Account 66 in Rychnov nad Kneznou (east Bohemia). Account 273 in Karlovy Vary (west Bohemia). Account 485 in Kutna Hora (central Bohemia). Account 539 in Rakovnik (central Bohemia). Account 1050 in Hodonin (south Moravia). Account 1286 in Zdar nad Sazavou (south Moravia). Account 1527 in Tachov (west Bohemia). Account 1539 in Hl.m. Praha (Prague). Account 1965 in Hodonin (south Moravia). Account 2137 in Kladno (central Bohemia).",
        "is_accurate_without_evidence": 0,
        "is_accurate_with_evidence": 0
    },
    {
        "question_id": 120,
        "db_id": "financial",
        "question": "From Year 1995 to 2000, who are the accounts holders from 'east Bohemia'. State the account ID the frequency of statement issuance.",
        "evidence": "Accounts holder refers to the person who own this account.",
        "SQL": "SELECT T1.account_id, T1.frequency FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'east Bohemia' AND STRFTIME('%Y', T1.date) BETWEEN '1995' AND '2000'",
        "answer": "364 accounts id returned: [(14, 'POPLATEK MESICNE'), (76, 'POPLATEK MESICNE'),(80, 'POPLATEK MESICNE'),(84, 'POPLATEK PO OBRATU'),(103, 'POPLATEK MESICNE')...]",
        "difficulty": "moderate",
        "SQL_redbox_without_evidence": "SELECT a.account_id, a.frequency FROM account_table_1 a JOIN disp_table_4 d ON a.account_id = d.account_id JOIN client_table_3 c ON d.client_id = c.client_id JOIN district_table_5 dt ON c.district_id = dt.district_id WHERE dt.A3 = 'east Bohemia' AND d.type = 'OWNER' AND substr(a.date, 1, 4) BETWEEN '1995' AND '2000' LIMIT 10;",
        "SQL_redbox_with_evidence": "SELECT a.account_id, a.frequency, c.client_id FROM account_table_1 a JOIN district_table_5 d ON a.district_id = d.district_id JOIN disp_table_4 disp ON a.account_id = disp.account_id JOIN client_table_3 c ON disp.client_id = c.client_id WHERE d.A3 = 'east Bohemia' AND disp.type = 'OWNER' AND SUBSTR(a.date, 1, 4) BETWEEN '1995' AND '2000' ORDER BY a.account_id;",
        "redbox_answer_without_evidence": "approach is correct but answer is incomplete due to LIMIT in sql query. Account ID 14: Monthly statements (POPLATEK MESICNE). Account ID 76: Monthly statements. Account ID 80: Monthly statements. Account ID 84: After-transaction statements (POPLATEK PO OBRATU). Account ID 103: Monthly statements. Account ID 131: Monthly statements. Account ID 149: Monthly statements. Account ID 171: Monthly statements. Account ID 174: Monthly statements. Account ID 182: Monthly statements.",
        "redbox_answer_with_evidence": "364 account ids returned by sql query but LLM says there are 337 accounts:The query returned 337 account holders from east Bohemia with accounts created between 1995-2000. ",
        "is_accurate_without_evidence": 0,
        "is_accurate_with_evidence": 0
    },
    {
        "question_id": 128,
        "db_id": "financial",
        "question": "List the top nine districts, by descending order, from the highest to the lowest, the number of female account holders.",
        "evidence": "A2 refers to districts; Female refers to gender = 'F'",
        "SQL": "SELECT T2.A2, COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T1.gender = 'F' GROUP BY T2.district_id, T2.A2 ORDER BY COUNT(T1.client_id) DESC LIMIT 9",
        "answer":"[('Hl.m. Praha', 324), ('Karvina', 88), ('Ostrava - mesto', 84), ('Brno - mesto', 75), ('Zlin', 57), ('Olomouc', 50), ('Frydek - Mistek', 42), ('Kolin', 39),('Nachod', 37)]",
        "difficulty": "moderate",
        "SQL_redbox_without_evidence": "SELECT c.district_id, dt.A2 as district_name, COUNT(DISTINCT disp.account_id) as female_account_count FROM client_table_3 c JOIN disp_table_4 disp ON c.client_id = disp.client_id JOIN district_table_5 dt ON c.district_id = dt.district_id WHERE c.gender = 'F' AND disp.type = 'OWNER' GROUP BY c.district_id, dt.A2 ORDER BY female_account_count DESC LIMIT 9;",
        "SQL_redbox_with_evidence": "SELECT d.A2 as district_name, COUNT(DISTINCT c.client_id) as female_account_holders FROM  client_table_3 c JOIN disp_table_4 disp ON c.client_id = disp.client_id JOIN account_table_1 a ON disp.account_id = a.account_id JOIN district_table_5 d ON c.district_id = d.district_id WHERE c.gender = 'F' AND disp.type = 'OWNER' GROUP BY d.A2 ORDER BY female_account_holders DESC LIMIT 9;",
        "redbox_answer_without_evidence":"Prague (Hl.m. Praha): 267 female account holders. Karvina: 74 female account holders. Ostrava - mesto: 66 female account holders. Brno - mesto: 63 female account holders. Zlin: 49 female account holders. Olomouc: 38 female account holders. Frydek - Mistek: 36 female account holders. Kolin: 34 female account holders. Nachod: 32 female account holders",
        "redbox_answer_with_evidence": "Hl.m. Praha (Prague): 267 female account holders. Karvina: 74 female account holders. Ostrava - mesto: 66 female account holders. Brno - mesto: 63 female account holders. Zlin: 49 female account holders. Olomouc: 38 female account holders. Frydek - Mistek: 36 female account holders. Kolin: 34 female account holders. Nachod: 32 female account holders",
        "is_accurate_without_evidence": 1,
        "is_accurate_with_evidence": 1
    },
    {
    "question_id": 194,
    "db_id": "financial",
    "question": "Provide the IDs and age of the client with high level credit card, which is eligible for loans.",
    "evidence": "the credit card is high-level refers to card.type = 'gold'; eligible for loans refers to disp.type = 'OWNER'",
    "SQL": "SELECT T1.client_id, STRFTIME('%Y', CURRENT_TIMESTAMP) - STRFTIME('%Y', T3.birth_date) FROM disp AS T1 INNER JOIN card AS T2 ON T2.disp_id = T1.disp_id INNER JOIN client AS T3 ON T1.client_id = T3.client_id WHERE T2.type = 'gold' AND T1.type = 'OWNER'",
    "answer":"88 client returned. [(9, 90), (41, 57), (79, 56), (326, 58), (548, 88), (562, 50), (694, 89),(886, 77), (928, 74),(1067, 73)...",
    "difficulty": "moderate",
    "SQL_redbox_without_evidence": "SELECT c.client_id,(strftime('%Y', 'now') - strftime('%Y', c.birth_date)) - (strftime('%m-%d', 'now') < strftime('%m-%d', c.birth_date)) AS age FROM client_table_3 c JOIN disp_table_4 d ON c.client_id = d.client_id JOIN card_table_2 card ON d.disp_id = card.disp_id JOIN account_table_1 a ON d.account_id = a.account_id JOIN loan_table_6 l ON a.account_id = l.account_id WHERE card.type = 'gold' AND l.status = 'A' LIMIT 10;",
    "SQL_redbox_with_evidence": "SELECT c.client_id, (strftime('%Y', 'now') - strftime('%Y', c.birth_date)) - (strftime('%m-%d', 'now') < strftime('%m-%d', c.birth_date)) AS age FROM client_table_3 c JOIN disp_table_4 d ON c.client_id = d.client_id JOIN card_table_2 card ON d.disp_id = card.disp_id WHERE d.type = 'OWNER' AND card.type = 'gold' LIMIT 10;",
    "redbox_answer_without_evidence": "incorrect answer. 8 clients returned. Client ID: 5253, Age: 78. Client ID: 7127, Age: 67. Client ID: 7286, Age: 55. Client ID: 7683, Age: 79. Client ID: 9717, Age: 72. Client ID: 12079, Age: 52. Client ID: 12810, Age: 60. Client ID: 12843, Age: 72",
    "redbox_answer_with_evidence":"10 clients returned. approach is correct but answer is incomplete.Client 9 (89 years old). Client 41 (56 years old). Client 79 (56 years old). Client 326 (57 years old). Client 548 (87 years old). Client 562 (49 years old). Client 694 (89 years old). Client 886 (77 years old). Client 928 (73 years old). Client 1067 (73 years old)",
    "is_accurate_without_evidence": 0,
    "is_accurate_with_evidence": 0
    },

    {
        "question_id": 130,
        "db_id": "financial",
        "question": "How many of the account holders in South Bohemia still do not own credit cards?",
        "evidence": "A3 contains the region names; South Bohemia is one of region names.",
        "SQL": "SELECT COUNT(T3.account_id) FROM district AS T1 INNER JOIN client AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.client_id = T3.client_id WHERE T1.A3 = 'south Bohemia' AND T3.type != 'OWNER'",
        "answer":74,
        "difficulty": "moderate",
        "SQL_redbox_without_evidence": "WITH south_bohemia_districts AS (SELECT district_id FROM district_table_5 WHERE A3 = 'south Bohemia'), south_bohemia_clients AS (SELECT client_id FROM client_table_3 WHERE district_id IN (SELECT district_id FROM south_bohemia_districts)),south_bohemia_account_owners AS (SELECT DISTINCT d.client_id FROM disp_table_4 d WHERE d.type = 'OWNER' AND d.client_id IN (SELECT client_id FROM south_bohemia_clients)), card_holders AS (SELECT DISTINCT d.client_id FROM disp_table_4 d JOIN card_table_2 c ON d.disp_id = c.disp_id WHERE d.client_id IN (SELECT client_id FROM south_bohemia_account_owners)) SELECT COUNT(*) AS account_owners_without_cards FROM south_bohemia_account_owners sbao WHERE sbao.client_id NOT IN (SELECT client_id FROM card_holders)",
        "SQL_redbox_with_evidence": "SELECT COUNT(DISTINCT d.client_id) FROM disp_table_4 d JOIN account_table_1 a ON d.account_id = a.account_id JOIN district_table_5 dt ON a.district_id = dt.district_id WHERE dt.A3 = 'south Bohemia' AND d.type = 'OWNER' AND d.client_id NOT IN (SELECT d2.client_id FROM disp_table_4 d2 JOIN card_table_2 c ON d2.disp_id = c.disp_id)",
        "redbox_answer_without_evidence": 297,
        "redbox_answer_with_evidence":296,
        "is_accurate_without_evidence": 0,
        "is_accurate_with_evidence": 0
    },
      {
    "question_id": 193,
    "db_id": "financial",
    "question": "List all ID and district for clients that can only have the right to issue permanent orders or apply for loans.",
    "evidence": "Only the owner accounts have the right to issue permanent orders or apply for loans",
    "SQL": "SELECT T3.client_id, T2.district_id, T2.A2 FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id WHERE T3.type = 'OWNER'",
    "answer":"more than 1000 IDs. [(1, 18, 'Pisek'),(2, 1, 'Hl.m. Praha'),4, 5, 'Kolin'),(6, 12, 'Pribram'),(7, 15, 'Cesky Krumlov'),(8, 51, 'Trutnov'),(9, 60, 'Prostejov'),(10, 57, 'Hodonin'),",
    "difficulty": "moderate",
    "SQL_redbox_without_evidence": "SELECT DISTINCT c.client_id, c.district_id FROM client_table_3 c WHERE c.client_id NOT IN (-- Clients who are ONLY 'DISPONENT' on all their accounts SELECT client_id FROM disp_table_4 GROUP BY client_id HAVING COUNT(DISTINCT type) = 1 AND MAX(type) = 'DISPONENT') LIMIT 10;",
    "SQL_redbox_with_evidence": "SELECT DISTINCT c.client_id, c.district_id FROM client_table_3 c JOIN disp_table_4 disp ON c.client_id = disp.client_id WHERE disp.type = 'OWNER' AND c.client_id NOT IN (SELECT client_id FROM disp_table_4 WHERE type != 'OWNER' LIMIT 10;",
    "redbox_answer_without_evidence": "incomplete answer. not showing district names but ids instead. The results show 10 clients (IDs: 1, 2, 4, 6, 7, 8, 9, 10, 12, and 13) from various districts (18, 1, 5, 12, 15, 51, 60, 57, 40, and 54 respectively) ",
    "redbox_answer_with_evidence":"incomplete answer.The query returned 10 clients (client IDs: 1, 2, 4, 6, 7, 8, 9, 10, 12, and 13) with their corresponding district IDs.",
    "is_accurate_without_evidence": 0,
    "is_accurate_with_evidence": 0
  },
    {
        "question_id": 94,
        "db_id": "financial",
        "question": "List out the account numbers of female clients who are oldest and has lowest average salary, calculate the gap between this lowest average salary with the highest average salary?",
        "evidence": "Female means gender = 'F'; A11 refers to average salary; Gap = highest average salary - lowest average salary; If the person A's birthdate > B's birthdate, it means that person B is order than person A.",
        "SQL": "SELECT T1.account_id , ( SELECT MAX(A11) - MIN(A11) FROM district ) FROM account AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T1.account_id = T3.account_id INNER JOIN client AS T4 ON T3.client_id = T4.client_id WHERE T2.district_id = ( SELECT district_id FROM client WHERE gender = 'F' ORDER BY birth_date ASC LIMIT 1 ) ORDER BY T2.A11 DESC LIMIT 1",
        "answer":"[(6, 4431)]",
        "difficulty": "challenging",
        "SQL_redbox_without_evidence": "None",
        "SQL_redbox_with_evidence": "None",
        "redbox_answer_without_evidence": "I don't know. The database schema does not provide clear information about which column contains salary data, and there is no explicit salary field associated with clients. To answer this question, I would need documentation about the meaning of the columns in the districttable5 or a separate table that clearly contains salary information linked to clients.",
        "redbox_answer_with_evidence": "Agent stopped due to iteration limit or time limit. 3 attempts",
        "is_accurate_without_evidence": 0,
        "is_accurate_with_evidence": 0
    },
    {
        "question_id": 115,
        "db_id": "financial",
        "question": "For the branch which located in the south Bohemia with biggest number of inhabitants, what is the percentage of the male clients?",
        "evidence": "Percentage of the male clients = DIVIDE(COUNT(male clients), COUNT(clients)) * 100; Male refers to gender = 'M', A3 is the region name. A4 contains the information about inhabitants.",
        "SQL": "SELECT CAST(SUM(T1.gender = 'M') AS REAL) * 100 / COUNT(T1.client_id) FROM client AS T1 INNER JOIN district AS T2 ON T1.district_id = T2.district_id WHERE T2.A3 = 'south Bohemia' GROUP BY T2.A4 ORDER BY T2.A4 DESC LIMIT 1",
        "answer":44,
        "difficulty": "challenging",
        "SQL_redbox_without_evidence": "SELECT COUNT(CASE WHEN gender = 'M' THEN 1 END) * 100.0 / COUNT(*) AS male_percentage FROM client_table_3 WHERE district_id = 14",
        "SQL_redbox_with_evidence": "WITH south_bohemia_district AS (SELECT district_id FROM district_table_5 WHERE A3 = 'south Bohemia' ORDER BY A4 DESC LIMIT 1) SELECT d.district_id, d.A2 as district_name, d.A4 as inhabitants, COUNT(CASE WHEN c.gender = 'M' THEN 1 END) * 100.0 / COUNT(*) as male_percentage, COUNT(CASE WHEN c.gender = 'M' THEN 1 END) as male_count, COUNT(*) as total_clients FROM district_table_5 d JOIN client_table_3 c ON d.district_id = c.district_id WHERE d.district_id = (SELECT district_id FROM south_bohemia_district) GROUP BY d.district_id, d.A2, d.A4",
        "redbox_answer_without_evidence": "40%. it produces two sql queries to get to the final answer.",
        "redbox_answer_with_evidence":40,
        "is_accurate_without_evidence": 0,
        "is_accurate_with_evidence": 0
    },
    {
        "question_id": 125,
        "db_id": "financial",
        "question": "For loans contracts which are still running where client are in debt, list the district of the and the state the percentage unemployment rate increment from year 1995 to 1996.",
        "evidence": "Unemployment increment rate in percentage = [(unemployment rate 2016 - unemployment rate 2015) / unemployment rate 2015] * 100; unemployment rate 2015 appears in the A12; unemployment rate 2016 appears in the A13; Loan contracts which are still running where client are in debt can be presented as status = 'D'",
        "SQL": "SELECT CAST((T3.A13 - T3.A12) AS REAL) * 100 / T3.A12 FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN district AS T3 ON T2.district_id = T3.district_id WHERE T1.status = 'D'",
        "answer":"a long list of unemployment rates including 115%.",
        "difficulty": "challenging",
        "SQL_redbox_without_evidence": "SELECT d.district_id, d.A2 as district_name, d.A3 as region, d.A12 as unemployment_rate_95, d.A13 as unemployment_rate_96, ((d.A13 - d.A12)/d.A12)*100 as unemployment_increase_percent FROM loan_table_6 l JOIN account_table_1 a ON l.account_id = a.account_id JOIN district_table_5 d ON a.district_id = d.district_id WHERE l.status = 'A' ORDER BY unemployment_increase_percent DESC LIMIT 10",
        "SQL_redbox_with_evidence": "SELECT d.district_id, d.A2 AS district_name, d.A3 AS region, ROUND(((d.A13 - d.A12) / d.A12) * 100, 2) AS unemployment_increment_pct FROM loan_table_6 l JOIN account_table_1 a ON l.account_id = a.account_id JOIN district_table_5 d ON a.district_id = d.district_id WHERE l.status = 'D' ORDER BY unemployment_increment_pct DESC LIMIT 10;",
        "redbox_answer_without_evidence":"seems correct but incomplete answer. Plzen-jih in west Bohemia: From 0.6% in 1995 to 1.29% in 1996, representing a 115% increase. Prague: From 0.2% in 1995 to 0.43% in 1996, also representing approximately 115% increase",
        "redbox_answer_with_evidence":"seems correct but incomplete answer. Prague (Hl.m. Praha) has the highest unemployment rate increase at 115%, appearing multiple times due to having multiple clients with running loans in debt. Hradec Kralove in east Bohemia had a 47.06% increase. Zlin in south Moravia had a 44.38% increase. Rychnov nad Kneznou in east Bohemia had a 43.53% increase. Blansko in south Moravia had a 42.4% increase. Strakonice in south Bohemia had a 40% increase",
        "is_accurate_without_evidence": 0,
        "is_accurate_with_evidence": 0
    },
    {
        "question_id": 149,
        "db_id": "financial",
        "question": "Please list the account types that are not eligible for loans, and the average income of residents in the district where the account is located exceeds $8000 but is no more than $9000.",
        "evidence": "A11 represents the average salary; Salary and income share the similar meanings; when the account type = 'OWNER', it's eligible for loans",
        "SQL": "SELECT T3.type FROM district AS T1 INNER JOIN account AS T2 ON T1.district_id = T2.district_id INNER JOIN disp AS T3 ON T2.account_id = T3.account_id WHERE T3.type != 'OWNER' AND T1.A11 BETWEEN 8000 AND 9000",
        "answer":"461 records consisting of ('DISPONENT',)]",
        "difficulty": "challenging",
        "SQL_redbox_without_evidence": "SELECT type, COUNT(*) as count FROM disp_table_4 WHERE account_id IN (SELECT account_id FROM account_table_1 WHERE district_id IN (SELECT district_id FROM district_table_5 WHERE A11 BETWEEN 8000 AND 9000)) AND account_id NOT IN (SELECT account_id FROM loan_table_6 WHERE account_id IS NOT NULL) GROUP BY type",
        "SQL_redbox_with_evidence": "SELECT DISTINCT d.type FROM disp_table_4 d JOIN account_table_1 a ON d.account_id = a.account_id JOIN district_table_5 dt ON a.district_id = dt.district_id WHERE d.type != 'OWNER' AND dt.A11 > 8000 AND dt.A11 <= 9000",
        "redbox_answer_without_evidence": "379 DISPONENT accounts have never received loans. 2000 OWNER accounts have never received loans. This suggests that both account types (DISPONENT and OWNER) can be ineligible for loans in these middle-income districts, with OWNER accounts representing the majority of non-loan accounts.",
        "redbox_answer_with_evidence":"The query results show that 'DISPONENT' is the only account type that meets these criteria. it does not return all single accounts but it returns the type. so counting this answer as correct.",
        "is_accurate_without_evidence": 0,
        "is_accurate_with_evidence": 1
    },
    {
        "question_id": 169,
        "db_id": "financial",
        "question": "What was the growth rate of the total amount of loans across all accounts for a male client between 1996 and 1997?",
        "evidence": "Growth rate = (sum of amount_1997 - sum of amount_1996) / (sum of amount_1996) * 100%; Male refers to gender = 'M'",
        "SQL": "SELECT CAST((SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1997' THEN T1.amount ELSE 0 END) - SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996' THEN T1.amount ELSE 0 END)) AS REAL) * 100 / SUM(CASE WHEN STRFTIME('%Y', T1.date) = '1996' THEN T1.amount ELSE 0 END) FROM loan AS T1 INNER JOIN account AS T2 ON T1.account_id = T2.account_id INNER JOIN disp AS T3 ON T3.account_id = T2.account_id INNER JOIN client AS T4 ON T4.client_id = T3.client_id WHERE T4.gender = 'M' AND T3.type = 'OWNER'",
        "answer":25.30,
        "difficulty": "challenging",
        "SQL_redbox_without_evidence": "WITH male_accounts AS (SELECT DISTINCT a.account_id FROM account_table_1 a JOIN disp_table_4 d ON a.account_id = d.account_id JOIN client_table_3 c ON d.client_id = c.client_id WHERE c.gender = 'M' AND d.type = 'OWNER') SELECT SUM(CASE WHEN substr(l.date, 1, 4) = '1996' THEN l.amount ELSE 0 END) as total_1996, SUM(CASE WHEN substr(l.date, 1, 4) = '1997' THEN l.amount ELSE 0 END) as total_1997, CASE WHEN SUM(CASE WHEN substr(l.date, 1, 4) = '1996' THEN l.amount ELSE 0 END) = 0 THEN 'Cannot calculate growth (no loans in 1996)' ELSE ROUND(((SUM(CASE WHEN substr(l.date, 1, 4) = '1997' THEN l.amount ELSE 0 END) - SUM(CASE WHEN substr(l.date, 1, 4) = '1996' THEN l.amount ELSE 0 END)) * 100.0 / SUM(CASE WHEN substr(l.date, 1, 4) = '1996' THEN l.amount ELSE 0 END)), 2) || '%' END as growth_rate FROM loan_table_6 l JOIN male_accounts ma ON l.account_id = ma.account_id WHERE substr(l.date, 1, 4) IN ('1996', '1997');",
        "SQL_redbox_with_evidence": "SELECT SUM(CASE WHEN SUBSTR(l.date, 1, 4) = '1996' THEN l.amount ELSE 0 END) AS total_1996, SUM(CASE WHEN SUBSTR(l.date, 1, 4) = '1997' THEN l.amount ELSE 0 END) AS total_1997, (SUM(CASE WHEN SUBSTR(l.date, 1, 4) = '1997' THEN l.amount ELSE 0 END) - SUM(CASE WHEN SUBSTR(l.date, 1, 4) = '1996' THEN l.amount ELSE 0 END)) / CAST(SUM(CASE WHEN SUBSTR(l.date, 1, 4) = '1996' THEN l.amount ELSE 0 END) AS FLOAT) * 100 AS growth_rate FROM loan_table_6 l JOIN disp_table_4 d ON l.account_id = d.account_id JOIN client_table_3 c ON d.client_id = c.client_id WHERE c.gender = 'M' AND SUBSTR(l.date, 1, 4) IN ('1996', '1997')",
        "redbox_answer_without_evidence":"The results show that the total loan amount for male clients was 10,084,572 in 1996 and increased to 12,635,988 in 1997, resulting in a growth rate of 25.3%. This indicates a significant increase in lending to male clients during this one-year period.",
        "redbox_answer_with_evidence":"The total loan amount for male clients in 1996 was 12,553,044. The total loan amount for male clients in 1997 was 15,736,752. The growth rate between 1996 and 1997 was 25.36%",
        "is_accurate_without_evidence": 1,
        "is_accurate_with_evidence": 0
    },
    {
        "question_id": 173,
        "db_id": "financial",
        "question": "How often does account number 3 request an account statement to be released? What was the aim of debiting 3539 in total?",
        "evidence": "k_symbol refers to the purpose of payments",
        "SQL": "SELECT T1.frequency, T2.k_symbol FROM account AS T1 INNER JOIN (SELECT account_id, k_symbol, SUM(amount) AS total_amount FROM `order` GROUP BY account_id, k_symbol) AS T2 ON T1.account_id = T2.account_id WHERE T1.account_id = 3 AND T2.total_amount = 3539",
        "answer": "[('POPLATEK MESICNE', 'POJISTNE')]. POPLATEK MESICNE means monthly statements.", 
        "difficulty": "challenging",
        "SQL_redbox_without_evidence": "SELECT k_symbol, COUNT(*) as count, SUM(amount) as total_amount FROM order_table_7 WHERE account_id = 3 GROUP BY k_symbol",
        "SQL_redbox_with_evidence": "None",
        "redbox_answer_without_evidence":"For the first question about how often account number 3 requests an account statement, there is no explicit data in the database tables that tracks statement requests..the aim of debiting 3539 in total appears to be for an insurance payment made from account number 3.", 
        "redbox_answer_with_evidence":"Agent stopped due to iteration limit or time limit. 3 attempts",
        "is_accurate_without_evidence": 0,
        "is_accurate_with_evidence": 0
    }
]
